from idea import IDEA
import random
random.seed(0x9e3779f5)
xor_key = [0xAD, 0x7, 0x83, 0x3F, 0x8D, 0xB4, 0xC1, 0x9C, 0x15, 0xC6, 
0x41, 0xDA, 0xD, 0xD8, 0x94, 0x69, 0xA5, 0x60, 0xFA, 0x79, 
0xA8, 0x17, 0x5E, 0x31, 0x4F, 0x78, 0x65, 0xD3, 0xA7, 0xF0, 
0x4B, 0x88,0x2b,0x46,0x73,0xcb,0xdc,0x22,0xa0,0xbc,0xde,0x3d,0xa9,0x75,0x5f,0x86,0xae,0xa7]
input = b''
key = [20933, 47436, 50802, 61220, 50770, 20101, 18681, 52670, 27711, 24764, 56316, 47292, 37409, 51778, 52405, 2244, 4142, 25827, 27198, 55773, 10118, 27120, 28565, 64955, 8479, 48866, 63625, 44991, 30741, 31596, 32526, 9747, 5448, 30782, 40729, 50101, 27689, 11383, 20326, 48522, 48942, 17047, 8228, 5638, 11184, 36736, 56326, 35942, 13825, 10900, 57191, 5876, 3306410270, 1733554798, 2940290056, 869615930, 213, 137, 173, 246, 68, 132, 32, 135, 60274, 41540, 62842, 4531, 27393, 49048, 62051, 45916, 7301, 55519, 47832, 822, 32947, 49055, 30756, 53430, 19577, 26204, 64375, 33910, 17358, 34457, 33644, 48673, 20313, 9127, 30411, 65450, 8439, 48636, 19538, 19786, 32493, 38819, 27992, 64898, 49721, 11406, 25137, 12334, 36037, 12713, 12542, 35622, 62817, 49256, 42929, 49965, 29175, 50913, 47789, 26799, 2929880993, 2110131478, 3220001771, 3884492354, 187, 166, 103, 123, 2, 24, 8, 46, 37377, 48891, 62875, 25239, 40874, 61344, 34544, 7800, 58527, 29927, 36905, 16054, 914, 32768, 34581, 61024, 21882, 25642, 19181, 13649, 18358, 29235, 40048, 24003, 47325, 16971, 20349, 44993, 64982, 49583, 27707, 62086, 4280, 23408, 10237, 64264, 59501, 46291, 61330, 28088, 35080, 8459, 17936, 27472, 16625, 20961, 23119, 37066, 60100, 45165, 42152, 3505, 586913109, 3889036003, 833860679, 1487621619, 95, 228, 23, 210, 127, 180, 78, 77, 55743, 34480, 34050, 15438, 793, 18172, 25855, 21827, 15456, 33255, 59701, 61685, 52993, 27485, 29629, 13955, 4102, 4001, 62604, 4049, 31159, 65470, 20460, 52767, 28789, 49057, 42087, 59280, 12106, 41085, 11525, 25462, 42954, 22512, 5078, 57800, 33668, 41505, 2037, 9892, 29371, 23863, 36847, 34892, 52130, 8715, 5949, 33481, 16106, 41226, 42034, 50414, 2254226411, 2110110694, 1531221108, 1446352199, 37, 33, 122, 209, 169, 165, 241, 14, 24745, 30511, 54058, 13581, 16348, 34939, 55215, 35553, 6121, 19319, 26542, 62420, 42503, 34359, 29260, 14171, 43045, 11828, 13707, 41287, 17920, 64069, 32282, 1386, 30962, 52671, 3451, 57227, 10214, 22481, 14082, 3588, 51072, 52795, 33558, 60677, 25066, 22219, 46826, 4611, 32540, 11467, 27670, 13147, 39814, 33561, 51223, 7556, 22644, 65144, 52679, 2538, 3372285382, 2424819681, 2313701940, 881833043, 121, 173, 248, 120, 137, 60, 209, 183, 28250, 38365, 35994, 18766, 4480, 16090, 16824, 53593, 35039, 57131, 51298, 23068, 27391, 38378, 24592, 22401, 13610, 46380, 6190, 2516, 34215, 59033, 26753, 3586, 22703, 21716, 61073, 6361, 19497, 56846, 33865, 25919, 41307, 81, 64692, 14912, 13902, 36415, 60995, 17420, 2910, 64729, 52048, 22477, 19946, 12046, 36341, 26839, 53560, 27808, 53182, 26282, 2979781812, 3602191930, 2362897489, 3414017133, 182, 147, 92, 117, 46, 230, 198, 69]
print(len(key))
key = key[:52]
for i in range(52):
     print(hex(key[i]),end=',')
print("\n")
key_turple = tuple([tuple(key[i:i+6]) for i in range(0, len(key), 6)])
def main():
    key =[0x84,0x2b,  0xf2,0x41,  0xec,0x44,  0x90,0x7d, 0x1b,0x4b, 0x98,0xd4, 0x0a,0xe8, 0x78,0x3b]
    key = int(''.join([hex(x)[2:].zfill(2) for x in key]), 16)
    print(f"\nKey:\t\t{hex(key)}\n")
    my_IDEA = IDEA(key)
    print(my_IDEA._keys)
    my_IDEA._keys = key_turple
    print(my_IDEA._keys)
    # Ciphertext input and transformation
    encrypted = b"DASCTF{0123456789abcdef0123456789abcdef01234567}"
    encrypted = list(encrypted)
    for i in range(0x30):
         encrypted[i] ^= xor_key[i]
         print(hex(encrypted[i]),end=",")
    encrypted = int(''.join([hex(x)[2:].zfill(2) for x in encrypted]), 16)
    sub_dec = []

    size = encrypted.bit_length()

    # Decryption
    if size % 64 != 0:
        x = size // 64 + 1
        size += 64 - size % 64
    else:
        x = size // 64
    decrypted = 0
    #分块解密
    for i in range(x):
        shift = size - (i+1) * 64
        k = (encrypted >> shift) & 0xFFFFFFFFFFFFFFFF
        sub_dec.append(my_IDEA.encrypt(k))

    for i in range(x):
            sub_dec[i] = sub_dec[i] << (x - (i + 1)) * 64
            decrypted = decrypted | sub_dec[i]
    print(f"\nDecrypted:\thex: {hex(decrypted)}")


    decrypted_hex = hex(decrypted)[2:]
    print(decrypted_hex)
    flag = ''
    for i in range(48):
        try:
             tmp = chr(int(decrypted_hex[2*i:2*i+2],16))
             flag += tmp
        except:
             continue
    print(flag)



if __name__ == '__main__':
    main()